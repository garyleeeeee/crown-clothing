{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCQIV-ZZImuYc13GxmGMIKNKxkmUUHi_tM\",\n  authDomain: \"crwn-clothing-db-39300.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-39300\",\n  storageBucket: \"crwn-clothing-db-39300.appspot.com\",\n  messagingSenderId: \"184189864604\",\n  appId: \"1:184189864604:web:b427018377274acd4cfb59\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshpt = await getDoc(userDocRef);\n  console.log(userSnapshpt);\n  if (!userSnapshpt.exists()) {\n    //Does not exist\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshpt","exists","displayName","email","createdAt","Date","error","message"],"sources":["/Users/gary/Desktop/crwn-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\n\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCQIV-ZZImuYc13GxmGMIKNKxkmUUHi_tM\",\n    authDomain: \"crwn-clothing-db-39300.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-39300\",\n    storageBucket: \"crwn-clothing-db-39300.appspot.com\",\n    messagingSenderId: \"184189864604\",\n    appId: \"1:184189864604:web:b427018377274acd4cfb59\"\n  };\n  \n  // Initialize Firebase\n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const provider = new GoogleAuthProvider();\n  \n  provider.setCustomParameters({\n    prompt: 'select_account',\n  });\n\n\n  export const auth = getAuth();\n  export const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n  export const db = getFirestore();\n\n  export const createUserDocumentFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log(userDocRef);\n\n    const userSnapshpt = await getDoc(userDocRef);\n    console.log(userSnapshpt);\n\n    if(!userSnapshpt.exists()) {\n        //Does not exist\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt\n            });\n        } catch(error) {\n            console.log('error creating the user', error.message)\n        }\n    }\n\n    return userDocRef;\n  }"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,eAAe;AAEhG,SAASC,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,QAAQ,oBAAoB;;AAEtE;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,wCAAwC;EACpDC,SAAS,EAAE,wBAAwB;EACnCC,aAAa,EAAE,oCAAoC;EACnDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAIb,kBAAkB,EAAE;AAEzCa,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AAGF,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAAE;AAC7B,OAAO,MAAMoB,qBAAqB,GAAGA,CAAA,KAAMlB,eAAe,CAACiB,IAAI,EAAEH,QAAQ,CAAC;AAE1E,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAE;AAEhC,OAAO,MAAMkB,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC5D,MAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACE,GAAG,CAAC;EACjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EAEzB,IAAG,CAACA,YAAY,CAACC,MAAM,EAAE,EAAE;IACvB;IACA,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGR,QAAQ;IACvC,MAAMS,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAM1B,MAAM,CAACiB,UAAU,EAAE;QACrBM,WAAW;QACXC,KAAK;QACLC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAME,KAAK,EAAE;MACXR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ;EAEA,OAAOX,UAAU;AACnB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}