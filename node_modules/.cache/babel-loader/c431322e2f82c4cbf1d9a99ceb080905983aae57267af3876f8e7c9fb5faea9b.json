{"ast":null,"code":"var _jsxFileName = \"/Users/gary/Desktop/crwn-clothing/src/components/button/button.component.jsx\";\nimport { BaseButton, InvertedButton, GoogleSignInButton } from './button.styles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BUTTON_TYPE_CLASSES = {\n  base: 'base',\n  google: 'google-sign-in',\n  inverted: 'inverted'\n};\nconst getButton = function () {\n  let buttonType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BUTTON_TYPE_CLASSES.base;\n  return {\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton\n  }[buttonType];\n};\nconst Button = _ref => {\n  let {\n    children,\n    buttonType,\n    ...otherProps\n  } = _ref;\n  const CutomButton = getButton(buttonType);\n  return /*#__PURE__*/_jsxDEV(CutomButton, {\n    ...otherProps,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_c = Button;\nexport default Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["BaseButton","InvertedButton","GoogleSignInButton","jsxDEV","_jsxDEV","BUTTON_TYPE_CLASSES","base","google","inverted","getButton","buttonType","arguments","length","undefined","Button","_ref","children","otherProps","CutomButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gary/Desktop/crwn-clothing/src/components/button/button.component.jsx"],"sourcesContent":["import {BaseButton, InvertedButton, GoogleSignInButton} from './button.styles.jsx';\n\nconst BUTTON_TYPE_CLASSES = {\n    base: 'base',\n    google: 'google-sign-in',\n    inverted: 'inverted',\n\n};\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) =>(\n    {\n        [BUTTON_TYPE_CLASSES.base]:BaseButton,\n        [BUTTON_TYPE_CLASSES.google]:GoogleSignInButton,\n        [BUTTON_TYPE_CLASSES.inverted]:InvertedButton,\n    }[buttonType]\n);\n\nconst Button = ({ children, buttonType, ...otherProps }) => {\n    const CutomButton = getButton(buttonType)\n    return (\n        <CutomButton {...otherProps}>\n            {children}\n        </CutomButton>\n    )\n}\n\nexport default Button;"],"mappings":";AAAA,SAAQA,UAAU,EAAEC,cAAc,EAAEC,kBAAkB,QAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,mBAAmB,GAAG;EACxBC,IAAI,EAAE,MAAM;EACZC,MAAM,EAAE,gBAAgB;EACxBC,QAAQ,EAAE;AAEd,CAAC;AAED,MAAMC,SAAS,GAAG,SAAAA,CAAA;EAAA,IAACC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,mBAAmB,CAACC,IAAI;EAAA,OACpD;IACI,CAACD,mBAAmB,CAACC,IAAI,GAAEN,UAAU;IACrC,CAACK,mBAAmB,CAACE,MAAM,GAAEL,kBAAkB;IAC/C,CAACG,mBAAmB,CAACG,QAAQ,GAAEP;EACnC,CAAC,CAACS,UAAU,CAAC;AAAA,CAChB;AAED,MAAMI,MAAM,GAAGC,IAAA,IAA6C;EAAA,IAA5C;IAAEC,QAAQ;IAAEN,UAAU;IAAE,GAAGO;EAAW,CAAC,GAAAF,IAAA;EACnD,MAAMG,WAAW,GAAGT,SAAS,CAACC,UAAU,CAAC;EACzC,oBACIN,OAAA,CAACc,WAAW;IAAA,GAAKD,UAAU;IAAAD,QAAA,EACtBA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEtB,CAAC;AAAAC,EAAA,GAPKT,MAAM;AASZ,eAAeA,MAAM;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}